schema {
  query: Query
  mutation: Mutation
}

type PageInfo {
  totalCount: Int!
  first: String!
  last: String!
}

type GeoPoint {
  lat: Float!
  lon: Float!
}

type Address {
  streetWithNumber: String!
  zipCode: String!
  city: String!
}

type Facility {
  id: ID!
  name: String!
  email: AWSEmail!
  phoneNumber: AWSPhone
  address: Address!
  location: GeoPoint
  createdAt: AWSDateTime
}

type FacilitiesPage {
  items: [Facility]!
  pageInfo: PageInfo!
}

type User {
  id: ID!
  name: String!
  email: AWSEmail!
  phoneNumber: AWSPhone
  facilities: [Facility]!
  createdAt: AWSDateTime!
}

type Enrollment {
  id: ID!
  facility: Facility!
  approved: Boolean!
  expirationAt: AWSDateTime!
  createdAt: AWSDateTime!
}

type FormDataEntry {
  key: String!
  value: String!
}

type ImageUpload {
  url: AWSURL!
  imageId: ID!
  formData: [FormDataEntry]!
  expirationAt: AWSDateTime!
}

type Image {
  id: ID!
  filename: String!
  url: AWSURL! #hires
  width: Int!
  height: Int!
  thumbnails: [Thumbnail]!
}

type Thumbnail {
  label: String!
  url: AWSURL!
  width: Int!
  height: Int!
}

type Category {
  id: ID!
  name: String!
  description: String!
  archived: Boolean!
}

type VacancyAd {
  id: ID!
  facility: Facility!
  user: User!
  categories: [Category]!
  name: String!
  description: String!
  collaborative: Boolean!
  active: Boolean!
  createdAt: AWSDateTime!
}

input VacancyAdInput {
  facilityId: ID!
  name: String!
  description: String!
  collaborative: Boolean!
  categoryIds: [ID]!
}

input RequestEnrollmentInput {
  facilityId: ID!
}

input FinalizeEnrollmentInput {
  enrollmentId: ID!
  approvalToken: String!
}

input CreateImageUploadInput {
  filename: String!
}

type Query {
  facilities(query: String, after: String, before: String, limit: Int = 20): FacilitiesPage!
  viewer: User!
  enrollments(approved: Boolean): [Enrollment]!
  categories(archived: Boolean): [Category]!
}

type Mutation {
  requestEnrollment(input: RequestEnrollmentInput!): Enrollment!
  finalizeEnrollment(input: FinalizeEnrollmentInput!): Enrollment!
  createImageUpload(input: CreateImageUploadInput!): ImageUpload!
  createVacancyAd(input: VacancyAdInput!): VacancyAd!
}
